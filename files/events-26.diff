diff --git a/CRM/Event/BAO/Participant.php b/CRM/Event/BAO/Participant.php
index d05b0117..8a7045a9 100644
--- a/CRM/Event/BAO/Participant.php
+++ b/CRM/Event/BAO/Participant.php
@@ -1906,8 +1906,10 @@ WHERE    civicrm_participant.contact_id = {$contactID} AND
       $eventTitle = $dao->title;
       $eventId = $dao->event_id;
     }
-    //verify participant status is still Registered
-    if ($details['status'] != 'Registered') {
+
+    // Verify participant status is one that is available for self-service.
+    $isCancelable = CRM_Event_BAO_ParticipantStatusType::isSelfServiceCancelableStatus($details['status']);
+    if (!$isCancelable) {
       $status = "You cannot transfer or cancel your registration for " . $eventTitle . ' as you are not currently registered for this event.';
       CRM_Core_Session::setStatus($status, ts('Sorry'), 'alert');
       CRM_Utils_System::redirect($url);
diff --git a/CRM/Event/BAO/ParticipantStatusType.php b/CRM/Event/BAO/ParticipantStatusType.php
index b0166dbf..96daab99 100644
--- a/CRM/Event/BAO/ParticipantStatusType.php
+++ b/CRM/Event/BAO/ParticipantStatusType.php
@@ -306,4 +306,23 @@ LEFT JOIN  civicrm_event event ON ( event.id = participant.event_id )
     return ['is_error' => 0, 'messages' => $returnMessages];
   }
 
+  /**
+   * Returns TRUE if this service can be canceled via self-service, FALSE if not.
+   * @param string $status Should correspond to civicrm_participant_status_type.name.
+   *
+   * @return boolean
+   */
+  public static function isSelfServiceCancelableStatus($status) {
+    // Ideally this would be a boolean flag on participant statuses. AND handled at the BAO level.
+    $cancelableStatuses = [
+      'Registered',
+      'Pending from pay later',
+      'On waitlist',
+      'Awaiting approval',
+      'Pending from approval',
+      'Pending from waitlist',
+    ];
+    return in_array($status, $cancelableStatuses);
+  }
+
 }
