diff --git a/CRM/Utils/HTMLPurifier/URIFilter.php b/CRM/Utils/HTMLPurifier/URIFilter.php
new file mode 100644
index 000000000000..f079e3ea8962
--- /dev/null
+++ b/CRM/Utils/HTMLPurifier/URIFilter.php
@@ -0,0 +1,30 @@
+<?php
+
+/**
+ * Class to re-convert curly braces that have been encoded as %7B and %7D
+ * back curly braces when they look like CiviCRM tokens.
+ *
+ * See also:
+ * https://lab.civicrm.org/dev/core/-/issues/5676
+ */
+class CRM_Utils_HTMLPurifier_URIFilter extends HTMLPurifier_URIFilter {
+
+  public $name = 'CiviToken';
+
+  public function prepare($config): bool {
+    return TRUE;
+  }
+
+  public function filter(&$uri, $config, $context): bool {
+    if ($uri->query) {
+      // Replace %7B with { and %7D with } if they look like CiviCRM tokens.
+      // Looking for {entity.string}
+      $uri->query = preg_replace_callback('/%7B([A-Za-z0-9_]*\.[A-Za-z0-9_.]*?)%7D/', function ($matches) {
+        return '{' . $matches[1] . '}';
+      }, $uri->query);
+    }
+    return TRUE;
+
+  }
+
+}
diff --git a/CRM/Utils/String.php b/CRM/Utils/String.php
index d38c0436043c..ae9903a53629 100644
--- a/CRM/Utils/String.php
+++ b/CRM/Utils/String.php
@@ -647,6 +647,9 @@ public static function purifyHTML($string) {
       $config->set('HTML.MaxImgLength', NULL);
       $config->set('CSS.MaxImgLength', NULL);
       $def = $config->maybeGetRawHTMLDefinition();
+      $uri = $config->getDefinition('URI');
+      $uri->addFilter(new CRM_Utils_HTMLPurifier_URIFilter(), $config);
+
       if (!empty($def)) {
         $def->addElement('figcaption', 'Block', 'Flow', 'Common');
         $def->addElement('figure', 'Block', 'Optional: (figcaption, Flow) | (Flow, figcaption) | Flow', 'Common');
