diff --git a/CRM/Mailing/BAO/MailingComponent.php b/CRM/Mailing/BAO/MailingComponent.php
index 006bb3aec85..719b816a1cd 100644
--- a/CRM/Mailing/BAO/MailingComponent.php
+++ b/CRM/Mailing/BAO/MailingComponent.php
@@ -26,7 +26,8 @@ class CRM_Mailing_BAO_MailingComponent extends CRM_Mailing_DAO_MailingComponent
    *
    * @return CRM_Core_BAO_LocationType.
    */
-  public static function retrieve(&$params, &$defaults) {
+  public static function retrieve(array &$params, array &$defaults) {
+    $params = array_merge(['is_active' => 1, 'is_default' => 1], $params);
     $component = new CRM_Mailing_DAO_MailingComponent();
     $component->copyValues($params);
     if ($component->find(TRUE)) {
diff --git a/CRM/Mailing/Event/BAO/Confirm.php b/CRM/Mailing/Event/BAO/Confirm.php
index 15f16ab6eb9..b223e1bdcac 100644
--- a/CRM/Mailing/Event/BAO/Confirm.php
+++ b/CRM/Mailing/Event/BAO/Confirm.php
@@ -95,47 +95,44 @@ public static function confirm($contact_id, $subscribe_id, $hash) {
     $group->id = $se->group_id;
     $group->find(TRUE);
 
-    $component = new CRM_Mailing_BAO_MailingComponent();
-    $component->is_default = 1;
-    $component->is_active = 1;
-    $component->component_type = 'Welcome';
-
-    $component->find(TRUE);
-
-    $html = $component->body_html;
-
-    if ($component->body_text) {
-      $text = $component->body_text;
+    $params['component_type'] = 'Welcome';
+    $defaults = [];
+    $component = CRM_Mailing_BAO_MailingComponent::retrieve($params, $defaults);
+    if ($component) {
+      $html = $component->body_html;
+
+      if ($component->body_text) {
+        $text = $component->body_text;
+      }
+      else {
+        $text = CRM_Utils_String::htmlToText($component->body_html);
+      }
+
+      $bao = new CRM_Mailing_BAO_Mailing();
+      $bao->body_text = $text;
+      $bao->body_html = $html;
+      $tokens = $bao->getTokens();
+
+      $html = CRM_Utils_Token::replaceDomainTokens($html, $domain, TRUE, $tokens['html']);
+      $html = CRM_Utils_Token::replaceWelcomeTokens($html, $group->title, TRUE);
+
+      $text = CRM_Utils_Token::replaceDomainTokens($text, $domain, FALSE, $tokens['text']);
+      $text = CRM_Utils_Token::replaceWelcomeTokens($text, $group->title, FALSE);
+
+      $mailParams = [
+        'groupName' => 'Mailing Event ' . $component->component_type,
+        'subject' => $component->subject,
+        'from' => "\"{$domainEmailName}\" <{$domainEmailAddress}>",
+        'toEmail' => $email,
+        'toName' => $display_name,
+        'replyTo' => CRM_Core_BAO_Domain::getNoReplyEmailAddress(),
+        'returnPath' => CRM_Core_BAO_Domain::getNoReplyEmailAddress(),
+        'html' => $html,
+        'text' => $text,
+      ];
+      // send - ignore errors because the desired status change has already been successful
+      $unused_result = CRM_Utils_Mail::send($mailParams);
     }
-    else {
-      $text = CRM_Utils_String::htmlToText($component->body_html);
-    }
-
-    $bao = new CRM_Mailing_BAO_Mailing();
-    $bao->body_text = $text;
-    $bao->body_html = $html;
-    $tokens = $bao->getTokens();
-
-    $html = CRM_Utils_Token::replaceDomainTokens($html, $domain, TRUE, $tokens['html']);
-    $html = CRM_Utils_Token::replaceWelcomeTokens($html, $group->title, TRUE);
-
-    $text = CRM_Utils_Token::replaceDomainTokens($text, $domain, FALSE, $tokens['text']);
-    $text = CRM_Utils_Token::replaceWelcomeTokens($text, $group->title, FALSE);
-
-    $mailParams = [
-      'groupName' => 'Mailing Event ' . $component->component_type,
-      'subject' => $component->subject,
-      'from' => "\"{$domainEmailName}\" <{$domainEmailAddress}>",
-      'toEmail' => $email,
-      'toName' => $display_name,
-      'replyTo' => CRM_Core_BAO_Domain::getNoReplyEmailAddress(),
-      'returnPath' => CRM_Core_BAO_Domain::getNoReplyEmailAddress(),
-      'html' => $html,
-      'text' => $text,
-    ];
-    // send - ignore errors because the desired status change has already been successful
-    $unused_result = CRM_Utils_Mail::send($mailParams);
-
     return $group->title;
   }
 
diff --git a/CRM/Mailing/Event/BAO/Reply.php b/CRM/Mailing/Event/BAO/Reply.php
index d618b201437..bc1340752a0 100644
--- a/CRM/Mailing/Event/BAO/Reply.php
+++ b/CRM/Mailing/Event/BAO/Reply.php
@@ -223,9 +223,12 @@ private static function autoRespond(&$mailing, $queue_id, $replyto) {
 
     $to = empty($replyto) ? $eq->email : $replyto;
 
-    $component = new CRM_Mailing_BAO_MailingComponent();
-    $component->id = $mailing->reply_id;
-    $component->find(TRUE);
+    $params['id'] = $mailing->reply_id;
+    $defaults = [];
+    $component = CRM_Mailing_BAO_MailingComponent::retrieve($params, $defaults);
+    if (!$component) {
+      return;
+    }
 
     $domain = CRM_Core_BAO_Domain::getDomain();
     list($domainEmailName, $domainEmailAddress) = CRM_Core_BAO_Domain::getNameAndEmail();
diff --git a/CRM/Mailing/Event/BAO/Resubscribe.php b/CRM/Mailing/Event/BAO/Resubscribe.php
index 73e15ec35da..dd1afbfea4c 100644
--- a/CRM/Mailing/Event/BAO/Resubscribe.php
+++ b/CRM/Mailing/Event/BAO/Resubscribe.php
@@ -32,16 +32,19 @@ class CRM_Mailing_Event_BAO_Resubscribe {
    * @param string $hash
    *   The hash.
    *
-   * @return array|null
-   *   $groups    Array of all groups to which the contact was added, or null if the queue event could not be found.
+   * @return array
+   *   $groups    Array of all groups to which the contact was added
    */
   public static function &resub_to_mailing($job_id, $queue_id, $hash) {
+    // Make a list of groups and a list of prior mailings that received
+    // this mailing.
+    $groups = [];
+    $mailings = [];
     // First make sure there's a matching queue event.
 
     $q = CRM_Mailing_Event_BAO_Queue::verify($job_id, $queue_id, $hash);
-    $success = NULL;
     if (!$q) {
-      return $success;
+      return $groups;
     }
 
     // check if this queue_id was actually unsubscribed
@@ -49,7 +52,7 @@ public static function &resub_to_mailing($job_id, $queue_id, $hash) {
     $ue->event_queue_id = $queue_id;
     $ue->org_unsubscribe = 0;
     if (!$ue->find(TRUE)) {
-      return $success;
+      return $groups;
     }
 
     $contact_id = $q->contact_id;
@@ -83,11 +86,6 @@ public static function &resub_to_mailing($job_id, $queue_id, $hash) {
                 AND     $group.is_hidden = 0"
     );
 
-    // Make a list of groups and a list of prior mailings that received
-    // this mailing.
-    $groups = [];
-    $mailings = [];
-
     while ($do->fetch()) {
       if ($do->entity_table == $group) {
         $groups[$do->entity_id] = NULL;
@@ -199,10 +197,12 @@ public static function send_resub_response($queue_id, $groups, $is_domain = FALS
                         WHERE $jobTable.id = $job");
     $dao->fetch();
 
-    $component = new CRM_Mailing_BAO_MailingComponent();
-    $component->id = $dao->resubscribe_id;
-    $component->find(TRUE);
-
+    $params['id'] = $dao->resubscribe_id;
+    $defaults = [];
+    $component = CRM_Mailing_BAO_MailingComponent::retrieve($params, $defaults);
+    if (!$component) {
+      return;
+    }
     $html = $component->body_html;
     if ($component->body_text) {
       $text = $component->body_text;
diff --git a/CRM/Mailing/Event/BAO/Subscribe.php b/CRM/Mailing/Event/BAO/Subscribe.php
index b02455d0cb9..0444888b3e1 100644
--- a/CRM/Mailing/Event/BAO/Subscribe.php
+++ b/CRM/Mailing/Event/BAO/Subscribe.php
@@ -198,12 +198,12 @@ public function send_confirm_request($email) {
     $group->id = $this->group_id;
     $group->find(TRUE);
 
-    $component = new CRM_Mailing_BAO_MailingComponent();
-    $component->is_default = 1;
-    $component->is_active = 1;
-    $component->component_type = 'Subscribe';
-
-    $component->find(TRUE);
+    $params['component_type'] = 'Subscribe';
+    $defaults = [];
+    $component = CRM_Mailing_BAO_MailingComponent::retrieve($params, $defaults);
+    if (!$component) {
+      return;
+    }
 
     $params = [
       'subject' => $component->subject,
diff --git a/CRM/Mailing/Event/BAO/Unsubscribe.php b/CRM/Mailing/Event/BAO/Unsubscribe.php
index d1349a664c3..8122d1042d0 100644
--- a/CRM/Mailing/Event/BAO/Unsubscribe.php
+++ b/CRM/Mailing/Event/BAO/Unsubscribe.php
@@ -310,7 +310,6 @@ public static function unsub_from_mailing($job_id, $queue_id, $hash, $return = F
    *   The job ID.
    */
   public static function send_unsub_response($queue_id, $groups, $is_domain, $job) {
-    $config = CRM_Core_Config::singleton();
     $domain = CRM_Core_BAO_Domain::getDomain();
     $jobObject = new CRM_Mailing_BAO_MailingJob();
     $jobTable = $jobObject->getTableName();
@@ -333,15 +332,12 @@ public static function send_unsub_response($queue_id, $groups, $is_domain, $job)
                         WHERE $jobTable.id = $job");
     $dao->fetch();
 
-    $component = new CRM_Mailing_BAO_MailingComponent();
-
-    if ($is_domain) {
-      $component->id = $dao->optout_id;
-    }
-    else {
-      $component->id = $dao->unsubscribe_id;
+    $params['id'] = $is_domain ? $dao->optout_id : $dao->unsubscribe_id;
+    $defaults = [];
+    $component = CRM_Mailing_BAO_MailingComponent::retrieve($params, $defaults);
+    if (!$component) {
+      return;
     }
-    $component->find(TRUE);
 
     $html = $component->body_html;
     if ($component->body_text) {
